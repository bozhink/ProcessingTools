@using ProcessingTools.Web.Areas.Journals.Controllers
@using ProcessingTools.Web.Areas.Journals.ViewModels.Publishers
@using ProcessingTools.Web.Constants
@using Bundles = ProcessingTools.Web.Common.Constants.BundleNames
@using Strings = ProcessingTools.Web.Resources.Areas.Journals.Views.Publishers.Strings
@model PublisherViewModel
@{
    this.ViewData[ContextKeys.Url] = Url.Action(
        actionName: PublishersController.AddressesActionName,
        controllerName: PublishersController.ControllerName,
        routeValues: new
        {
            area = AreaNames.Journals,
            id = Model?.Id
        });
}
<section role="main">
    <header>
        <h2>@this.ViewBag.Title</h2>
    </header>
    @using (Html.BeginForm(this.ViewData[ContextKeys.ActionName].ToString(), this.ViewData[ContextKeys.ControllerName].ToString(), FormMethod.Post, htmlAttributes: new { id = "form-publisher" }))
    {
        @Html.Partial(ViewNames.EditButtons, Model, this.ViewData)
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            @Html.ValidationSummary(true, string.Empty, new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
            <input type="hidden" data-bind="value: json()" name="addresses" />

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, string.Empty, new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AbbreviatedName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AbbreviatedName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AbbreviatedName, string.Empty, new { @class = "text-danger" })
                </div>
            </div>
        </div>
    }
    @Html.Partial(ViewNames.Addresses, Model, this.ViewData)
    <footer>
        <nav>
            <ul class="navigation">
                <li>
                    @Html.ActionLink(Strings.BackActionLinkText, PublishersController.IndexActionName)
                </li>
            </ul>
        </nav>
    </footer>
</section>
@section Scripts
{
    @Scripts.Render(Bundles.JQueryValidationScripts)
    @Scripts.Render(Bundles.KnockoutScripts)
    <script src="~/Scripts/Areas/Journals/Models/Shared/Address.js"></script>
    <script src="~/Scripts/Areas/Journals/ViewModels/Shared/AddressViewModel.js"></script>
    <script>
        window.jsonRequester.get('@this.ViewData[ContextKeys.Url].ToString()')
            .then(function (data) {
                ko.applyBindings(new AddressesViewModel(data));
            })
            .catch(function (error) {
                ko.applyBindings(new AddressesViewModel());
            });
    </script>
}