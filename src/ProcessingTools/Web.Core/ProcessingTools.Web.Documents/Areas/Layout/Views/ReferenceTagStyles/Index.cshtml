@model ProcessingTools.Web.Models.Layout.Styles.References.ReferenceTagStylesIndexViewModel

@{
    ViewData[ContextKeys.Title] = "Reference Tag Styles";
    if (string.IsNullOrWhiteSpace(Model?.PageHeading))
    {
        string title = Html.DisplayNameFor(m => m.PageHeading);
        if (!string.IsNullOrWhiteSpace(title))
        {
            ViewData[ContextKeys.Title] = title;
        }
    }
    else
    {
        ViewData[ContextKeys.Title] = Model.PageHeading;
    }
}

<section role="main">
    <header>
        <h2>@ViewData[ContextKeys.Title]</h2>
    </header>
    @if (Model == null)
    {
        <div class="alert alert-info">No items found.</div>
    }
    else
    {
        <p><a asp-action="@(ReferenceTagStylesController.CreateActionName)">Create New Tag Style</a></p>
        @if (Model.Items != null && Model.Items.Any())
        {
            <table class="table">
                <thead>
                    <tr>
                        <th></th>
                        <th>@Html.DisplayNameFor(m => m.Items.First().Name)</th>
                        <th>@Html.DisplayNameFor(m => m.Items.First().Description)</th>
                        <th>@Html.DisplayNameFor(m => m.Items.First().ReferenceXPath)</th>
                        <th>@Html.DisplayNameFor(m => m.Items.First().CreatedOn)</th>
                        <th>@Html.DisplayNameFor(m => m.Items.First().ModifiedOn)</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @{ int i = 0; }
                    @foreach (var item in Model.Items)
                    {
                        <tr>
                            <td>@(++i)</td>
                            <td>@Html.DisplayFor(m => item.Name)</td>
                            <td>@Html.DisplayFor(m => item.Description)</td>
                            <td>@Html.DisplayFor(m => item.ReferenceXPath)</td>
                            <td>@Html.DisplayFor(m => item.CreatedOn)</td>
                            <td>@Html.DisplayFor(m => item.ModifiedOn)</td>
                            <td>
                                <a asp-action="@(ReferenceTagStylesController.EditActionName)" asp-route-id="@(item.Id)">Edit</a> |
                                <a asp-action="@(ReferenceTagStylesController.DeleteActionName)" asp-route-id="@(item.Id)">Delete</a> |
                                <a asp-action="@(ReferenceTagStylesController.DetailsActionName)" asp-route-id="@(item.Id)">Details</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            <footer>
                @await Html.PartialAsync(ViewNames.NavigationFootPartial)
            </footer>
        }
    }
</section>

@section Scripts {
    @await Html.PartialAsync(ViewNames.PaginationScriptsPartial)
}

