@model ProcessingTools.Web.Models.Tools.Decode.Base64ViewModel

@{
    ViewData[ContextKeys.Title] = "Decode Base64 URL String";
}

<section role="main">
    <header>
        <h2>@ViewData[ContextKeys.Title]</h2>
    </header>
    <div class="row">
        <div class="col-md-6">
            <fieldset>
                <legend>Content</legend>
                <form method="post" class="container">
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, string.Empty, new { @class = "text-danger" })
                    <div class="form-group row">
                        <div class="col-md-12">
                            <textarea type="text" asp-for="Content" cols="30" rows="4" placeholder="Text to encode" class="form-control"></textarea>
                            <span asp-validation-for="Content" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-md-12">
                            <input type="submit" value="Submit" class="btn btn-outline-secondary" />
                            <input type="reset" value="Reset" class="btn btn-outline-secondary" />
                            <a asp-area="@(AreaNames.Tools)" asp-controller="@(DecodeController.ControllerName)" asp-action="@(DecodeController.Base64ActionName)" class="btn btn-outline-secondary">Clear</a>
                        </div>
                    </div>
                </form>
            </fieldset>
        </div>
        @if (Model != null && !string.IsNullOrEmpty(Model.Base64DecodedString))
        {
            <div class="col-md-6">
                <fieldset>
                    <legend>Decoded String</legend>
                    <div>
                        <code class="hard-word-wrap">@Model.Base64DecodedString</code>
                    </div>
                </fieldset>
            </div>
        }
    </div>
</section>

@section Scripts {
    <partial name="@ViewNames.ValidationScriptsPartial" />
}
