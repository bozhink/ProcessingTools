using System;
using System.Text;
using System.IO;
using System.Collections.Generic;
using System.Net;
using System.Runtime.Serialization;
using System.Runtime.Serialization.Json;
using Pensoft.Base.Json.ZooBank;

namespace RESTServicesJSONParserExample
{
    class Program
    {
        static void Main(string[] args)
        {
            {
                string jsonString = @"{""forename"" : ""Phil"", ""surname"" : ""Curnow"", ""age"" : 41}";
                DataContractJsonSerializer ser = new DataContractJsonSerializer(typeof(Person));
                MemoryStream stream = new MemoryStream(Encoding.UTF8.GetBytes(jsonString));
                Person obj = (Person)ser.ReadObject(stream);

                Console.WriteLine(obj.age);
                Console.WriteLine(obj.forename);
                Console.WriteLine(obj.surname);
            }

            {
                string jsonString = @"[{""forename"" : ""Phil"", ""surname"" : ""Curnow"", ""age"" : 41},{""forename"" : ""Lorna"", ""surname"" : ""Curnow"", ""age"" : 44}]";
                DataContractJsonSerializer ser = new DataContractJsonSerializer(typeof(List<Person>));
                MemoryStream stream = new MemoryStream(Encoding.UTF8.GetBytes(jsonString));
                var obj = (List<Person>)ser.ReadObject(stream);
                foreach (Person p in obj)
                    Console.WriteLine("Forename: {0} - Surname: {1}", p.forename, p.surname);
            }

            {
                string jsonString = @"[{ ""referenceuuid"":""A927321E-CCEF-428F-9DD5-963D5E5EE45E"",""label"": ""Deharveng, Louis, Anne Bedos & Wanda M. Weiner. 2011. Two new species of the genus Leenurina Najt & Weiner, 1992 (Collembola, Neanuridae, Caputanurininae) from Primorskij Kraj (Russia). ZooKeys 115."", ""value"": ""Deharveng, Louis, Anne Bedos & Wanda M. Weiner. 2011. Two new species of the genus Leenurina Najt & Weiner, 1992 (Collembola, Neanuridae, Caputanurininae) from Primorskij Kraj (Russia). ZooKeys 115."", ""authorlist"" : ""Deharveng, Louis, Anne Bedos & Wanda M. Weiner."", ""year"" : ""2011"", ""title"" : ""Two new species of the genus Leenurina Najt & Weiner, 1992 (Collembola, Neanuridae, Caputanurininae) from Primorskij Kraj (Russia)"", ""citationdetails"" : ""<em>ZooKeys<\/em> <b>115<\/b>."",""volume"":""115"",""number"":"""",""edition"":"""",""publisher"":"""",""placepublished"":"""",""pagination"":"""",""startpage"":"""",""endpage"":"""",""language"":""English"",""languageid"":""19691433"",""referencetype"":""Journal Article"",""lsid"":""urn:lsid:zoobank.org:pub:A927321E-CCEF-428F-9DD5-963D5E5EE45E"",""parentreferenceid"":""91BD42D4-90F1-4B45-9350-EEF175B1727A"",""parentreference"":""ZooKeys"",""authors"":[[{""familyname"":""Deharveng"",""givenname"":""Louis"",""gnubuuid"":""E777E18C-47CB-4967-9634-6F93FD9741A7""}],[{""familyname"":""Bedos"",""givenname"":""Anne"",""gnubuuid"":""CFD095B7-11C3-4A8A-9AA9-3682C0D75586""}],[{""familyname"":""Weiner"",""givenname"":""Wanda M."",""gnubuuid"":""0FE05171-E954-4A57-8891-3FDFF52206D3""}]],""NomenclaturalActs"" : [{""tnuuuid"":""2D6106A2-A5B4-4AA6-97C3-E2BA658CF0C7"",""OriginalReferenceUUID"":"""",""protonymuuid"": ""9C83247B-AE33-4520-BE47-8DF69EBEF9F7"", ""label"": ""Leenurina [placeholder record]"", ""value"": ""Leenurina [placeholder record]"",""lsid"":"""",""parentname"":"""",""namestring"":""Leenurina"",""rankgroup"":""Genus"",""usageauthors"":""Deharveng, Bedos & Weiner"",""taxonnamerankid"":""60"",""parentusageuuid"":"""",""cleanprotonym"" : ""Leenurina"",""NomenclaturalCode"":""ICZN""},{""tnuuuid"":""905C5771-F476-4371-80C5-20A16D3AFD8F"",""OriginalReferenceUUID"":""A927321E-CCEF-428F-9DD5-963D5E5EE45E"",""protonymuuid"": ""905C5771-F476-4371-80C5-20A16D3AFD8F"", ""label"": ""khualaza Deharveng, Bedos & Weiner 2011"", ""value"": ""khualaza Deharveng, Bedos & Weiner 2011"",""lsid"":""urn:lsid:zoobank.org:act:905C5771-F476-4371-80C5-20A16D3AFD8F"",""parentname"":""Leenurina"",""namestring"":""khualaza"",""rankgroup"":""Species"",""usageauthors"":""Deharveng, Bedos & Weiner"",""taxonnamerankid"":""70"",""parentusageuuid"":""2D6106A2-A5B4-4AA6-97C3-E2BA658CF0C7"",""cleanprotonym"" : ""Leenurina khualaza Deharveng, Bedos & Weiner, 2011"",""NomenclaturalCode"":""ICZN""},{""tnuuuid"":""5AAA02CB-3C05-4409-8592-240AF93AE8EE"",""OriginalReferenceUUID"":""A927321E-CCEF-428F-9DD5-963D5E5EE45E"",""protonymuuid"": ""5AAA02CB-3C05-4409-8592-240AF93AE8EE"", ""label"": ""pomorskii Deharveng, Bedos & Weiner 2011"", ""value"": ""pomorskii Deharveng, Bedos & Weiner 2011"",""lsid"":""urn:lsid:zoobank.org:act:5AAA02CB-3C05-4409-8592-240AF93AE8EE"",""parentname"":""Leenurina"",""namestring"":""pomorskii"",""rankgroup"":""Species"",""usageauthors"":""Deharveng, Bedos & Weiner"",""taxonnamerankid"":""70"",""parentusageuuid"":""2D6106A2-A5B4-4AA6-97C3-E2BA658CF0C7"",""cleanprotonym"" : ""Leenurina pomorskii Deharveng, Bedos & Weiner, 2011"",""NomenclaturalCode"":""ICZN""}]}]";
                DataContractJsonSerializer ser = new DataContractJsonSerializer(typeof(List<ZooBankRegistration>));
                MemoryStream stream = new MemoryStream(Encoding.UTF8.GetBytes(jsonString));
                var obj = (List<ZooBankRegistration>)ser.ReadObject(stream);

                foreach (ZooBankRegistration z in obj)
                {
                    Console.WriteLine(z.lsid);

                    Console.WriteLine("");

                    foreach (NomenclaturalAct na in z.NomenclaturalActs)
                    {
                        Console.WriteLine(na.lsid);
                    }

                    Console.WriteLine("");

                    foreach (List<Author> la in z.authors)
                    {
                        foreach (Author a in la)
                        {
                            Console.WriteLine("{0} {1}, {2}", a.givenname, a.familyname, a.gnubuuid);
                        }
                    }

                }

            }

        }
    }

    [DataContract]
    class Address
    {
        [DataMember]
        public string line1 { get; set; }
        [DataMember]
        public string line2 { get; set; }
    }


    [DataContract]
    class Person
    {
        [DataMember]
        public string forename { get; set; }
        [DataMember]
        public string surname { get; set; }
        [DataMember]
        public int age { get; set; }
        [DataMember]
        public Address address { get; set; }
    }
}
