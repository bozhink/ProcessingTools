//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8009
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.42.
// 
namespace ProcessingTools.ServiceClient.Aphia {
    using System.Xml.Serialization;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Diagnostics;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AphiaNameServiceBinding", Namespace="http://aphia/v1.0")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(Vernacular))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(Source))]
    public partial class AphiaNameService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getAphiaIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAphiaRecordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAphiaNameByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAphiaRecordByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAphiaRecordByExtIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback getExtIDbyAphiaIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAphiaRecordsByNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAphiaRecordsByVernacularOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAphiaRecordsByDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAphiaClassificationByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSourcesByAphiaIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAphiaSynonymsByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAphiaVernacularsByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAphiaChildrenByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback matchAphiaRecordsByNamesOperationCompleted;
        
        /// <remarks/>
        public AphiaNameService() {
            this.Url = "http://www.marinespecies.org/aphia.php?p=soap";
        }
        
        /// <remarks/>
        public event getAphiaIDCompletedEventHandler getAphiaIDCompleted;
        
        /// <remarks/>
        public event getAphiaRecordsCompletedEventHandler getAphiaRecordsCompleted;
        
        /// <remarks/>
        public event getAphiaNameByIDCompletedEventHandler getAphiaNameByIDCompleted;
        
        /// <remarks/>
        public event getAphiaRecordByIDCompletedEventHandler getAphiaRecordByIDCompleted;
        
        /// <remarks/>
        public event getAphiaRecordByExtIDCompletedEventHandler getAphiaRecordByExtIDCompleted;
        
        /// <remarks/>
        public event getExtIDbyAphiaIDCompletedEventHandler getExtIDbyAphiaIDCompleted;
        
        /// <remarks/>
        public event getAphiaRecordsByNamesCompletedEventHandler getAphiaRecordsByNamesCompleted;
        
        /// <remarks/>
        public event getAphiaRecordsByVernacularCompletedEventHandler getAphiaRecordsByVernacularCompleted;
        
        /// <remarks/>
        public event getAphiaRecordsByDateCompletedEventHandler getAphiaRecordsByDateCompleted;
        
        /// <remarks/>
        public event getAphiaClassificationByIDCompletedEventHandler getAphiaClassificationByIDCompleted;
        
        /// <remarks/>
        public event getSourcesByAphiaIDCompletedEventHandler getSourcesByAphiaIDCompleted;
        
        /// <remarks/>
        public event getAphiaSynonymsByIDCompletedEventHandler getAphiaSynonymsByIDCompleted;
        
        /// <remarks/>
        public event getAphiaVernacularsByIDCompletedEventHandler getAphiaVernacularsByIDCompleted;
        
        /// <remarks/>
        public event getAphiaChildrenByIDCompletedEventHandler getAphiaChildrenByIDCompleted;
        
        /// <remarks/>
        public event matchAphiaRecordsByNamesCompletedEventHandler matchAphiaRecordsByNamesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getAphiaID", RequestNamespace="http://aphia/v1.0/AphiaID", ResponseNamespace="http://aphia/v1.0/AphiaID")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public int getAphiaID(string scientificname, bool marine_only) {
            object[] results = this.Invoke("getAphiaID", new object[] {
                        scientificname,
                        marine_only});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetAphiaID(string scientificname, bool marine_only, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getAphiaID", new object[] {
                        scientificname,
                        marine_only}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndgetAphiaID(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getAphiaIDAsync(string scientificname, bool marine_only) {
            this.getAphiaIDAsync(scientificname, marine_only, null);
        }
        
        /// <remarks/>
        public void getAphiaIDAsync(string scientificname, bool marine_only, object userState) {
            if ((this.getAphiaIDOperationCompleted == null)) {
                this.getAphiaIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAphiaIDOperationCompleted);
            }
            this.InvokeAsync("getAphiaID", new object[] {
                        scientificname,
                        marine_only}, this.getAphiaIDOperationCompleted, userState);
        }
        
        private void OngetAphiaIDOperationCompleted(object arg) {
            if ((this.getAphiaIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAphiaIDCompleted(this, new getAphiaIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getAphiaRecords", RequestNamespace="http://aphia/v1.0/AphiaRecords", ResponseNamespace="http://aphia/v1.0/AphiaRecords")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public AphiaRecord[] getAphiaRecords(string scientificname, bool like, bool fuzzy, bool marine_only, int offset) {
            object[] results = this.Invoke("getAphiaRecords", new object[] {
                        scientificname,
                        like,
                        fuzzy,
                        marine_only,
                        offset});
            return ((AphiaRecord[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetAphiaRecords(string scientificname, bool like, bool fuzzy, bool marine_only, int offset, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getAphiaRecords", new object[] {
                        scientificname,
                        like,
                        fuzzy,
                        marine_only,
                        offset}, callback, asyncState);
        }
        
        /// <remarks/>
        public AphiaRecord[] EndgetAphiaRecords(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((AphiaRecord[])(results[0]));
        }
        
        /// <remarks/>
        public void getAphiaRecordsAsync(string scientificname, bool like, bool fuzzy, bool marine_only, int offset) {
            this.getAphiaRecordsAsync(scientificname, like, fuzzy, marine_only, offset, null);
        }
        
        /// <remarks/>
        public void getAphiaRecordsAsync(string scientificname, bool like, bool fuzzy, bool marine_only, int offset, object userState) {
            if ((this.getAphiaRecordsOperationCompleted == null)) {
                this.getAphiaRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAphiaRecordsOperationCompleted);
            }
            this.InvokeAsync("getAphiaRecords", new object[] {
                        scientificname,
                        like,
                        fuzzy,
                        marine_only,
                        offset}, this.getAphiaRecordsOperationCompleted, userState);
        }
        
        private void OngetAphiaRecordsOperationCompleted(object arg) {
            if ((this.getAphiaRecordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAphiaRecordsCompleted(this, new getAphiaRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getAphiaNameByID", RequestNamespace="http://aphia/v1.0/AphiaName", ResponseNamespace="http://aphia/v1.0/AphiaName")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string getAphiaNameByID(int AphiaID) {
            object[] results = this.Invoke("getAphiaNameByID", new object[] {
                        AphiaID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetAphiaNameByID(int AphiaID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getAphiaNameByID", new object[] {
                        AphiaID}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndgetAphiaNameByID(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAphiaNameByIDAsync(int AphiaID) {
            this.getAphiaNameByIDAsync(AphiaID, null);
        }
        
        /// <remarks/>
        public void getAphiaNameByIDAsync(int AphiaID, object userState) {
            if ((this.getAphiaNameByIDOperationCompleted == null)) {
                this.getAphiaNameByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAphiaNameByIDOperationCompleted);
            }
            this.InvokeAsync("getAphiaNameByID", new object[] {
                        AphiaID}, this.getAphiaNameByIDOperationCompleted, userState);
        }
        
        private void OngetAphiaNameByIDOperationCompleted(object arg) {
            if ((this.getAphiaNameByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAphiaNameByIDCompleted(this, new getAphiaNameByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getAphiaRecordByID", RequestNamespace="http://aphia/v1.0/AphiaRecord", ResponseNamespace="http://aphia/v1.0/AphiaRecord")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public AphiaRecord getAphiaRecordByID(int AphiaID) {
            object[] results = this.Invoke("getAphiaRecordByID", new object[] {
                        AphiaID});
            return ((AphiaRecord)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetAphiaRecordByID(int AphiaID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getAphiaRecordByID", new object[] {
                        AphiaID}, callback, asyncState);
        }
        
        /// <remarks/>
        public AphiaRecord EndgetAphiaRecordByID(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((AphiaRecord)(results[0]));
        }
        
        /// <remarks/>
        public void getAphiaRecordByIDAsync(int AphiaID) {
            this.getAphiaRecordByIDAsync(AphiaID, null);
        }
        
        /// <remarks/>
        public void getAphiaRecordByIDAsync(int AphiaID, object userState) {
            if ((this.getAphiaRecordByIDOperationCompleted == null)) {
                this.getAphiaRecordByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAphiaRecordByIDOperationCompleted);
            }
            this.InvokeAsync("getAphiaRecordByID", new object[] {
                        AphiaID}, this.getAphiaRecordByIDOperationCompleted, userState);
        }
        
        private void OngetAphiaRecordByIDOperationCompleted(object arg) {
            if ((this.getAphiaRecordByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAphiaRecordByIDCompleted(this, new getAphiaRecordByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getAphiaRecordByExtID", RequestNamespace="http://aphia/v1.0/AphiaRecord", ResponseNamespace="http://aphia/v1.0/AphiaRecord")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public AphiaRecord getAphiaRecordByExtID(string id, string type) {
            object[] results = this.Invoke("getAphiaRecordByExtID", new object[] {
                        id,
                        type});
            return ((AphiaRecord)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetAphiaRecordByExtID(string id, string type, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getAphiaRecordByExtID", new object[] {
                        id,
                        type}, callback, asyncState);
        }
        
        /// <remarks/>
        public AphiaRecord EndgetAphiaRecordByExtID(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((AphiaRecord)(results[0]));
        }
        
        /// <remarks/>
        public void getAphiaRecordByExtIDAsync(string id, string type) {
            this.getAphiaRecordByExtIDAsync(id, type, null);
        }
        
        /// <remarks/>
        public void getAphiaRecordByExtIDAsync(string id, string type, object userState) {
            if ((this.getAphiaRecordByExtIDOperationCompleted == null)) {
                this.getAphiaRecordByExtIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAphiaRecordByExtIDOperationCompleted);
            }
            this.InvokeAsync("getAphiaRecordByExtID", new object[] {
                        id,
                        type}, this.getAphiaRecordByExtIDOperationCompleted, userState);
        }
        
        private void OngetAphiaRecordByExtIDOperationCompleted(object arg) {
            if ((this.getAphiaRecordByExtIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAphiaRecordByExtIDCompleted(this, new getAphiaRecordByExtIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getExtIDbyAphiaID", RequestNamespace="http://aphia/v1.0/externalidentifiers", ResponseNamespace="http://aphia/v1.0/externalidentifiers")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string[] getExtIDbyAphiaID(int AphiaID, string type) {
            object[] results = this.Invoke("getExtIDbyAphiaID", new object[] {
                        AphiaID,
                        type});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetExtIDbyAphiaID(int AphiaID, string type, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getExtIDbyAphiaID", new object[] {
                        AphiaID,
                        type}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndgetExtIDbyAphiaID(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getExtIDbyAphiaIDAsync(int AphiaID, string type) {
            this.getExtIDbyAphiaIDAsync(AphiaID, type, null);
        }
        
        /// <remarks/>
        public void getExtIDbyAphiaIDAsync(int AphiaID, string type, object userState) {
            if ((this.getExtIDbyAphiaIDOperationCompleted == null)) {
                this.getExtIDbyAphiaIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetExtIDbyAphiaIDOperationCompleted);
            }
            this.InvokeAsync("getExtIDbyAphiaID", new object[] {
                        AphiaID,
                        type}, this.getExtIDbyAphiaIDOperationCompleted, userState);
        }
        
        private void OngetExtIDbyAphiaIDOperationCompleted(object arg) {
            if ((this.getExtIDbyAphiaIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getExtIDbyAphiaIDCompleted(this, new getExtIDbyAphiaIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getAphiaRecordsByNames", RequestNamespace="http://aphia/v1.0/AphiaMatches", ResponseNamespace="http://aphia/v1.0/AphiaMatches")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public AphiaRecord[][] getAphiaRecordsByNames(string[] scientificnames, bool like, bool fuzzy, bool marine_only) {
            object[] results = this.Invoke("getAphiaRecordsByNames", new object[] {
                        scientificnames,
                        like,
                        fuzzy,
                        marine_only});
            return ((AphiaRecord[][])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetAphiaRecordsByNames(string[] scientificnames, bool like, bool fuzzy, bool marine_only, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getAphiaRecordsByNames", new object[] {
                        scientificnames,
                        like,
                        fuzzy,
                        marine_only}, callback, asyncState);
        }
        
        /// <remarks/>
        public AphiaRecord[][] EndgetAphiaRecordsByNames(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((AphiaRecord[][])(results[0]));
        }
        
        /// <remarks/>
        public void getAphiaRecordsByNamesAsync(string[] scientificnames, bool like, bool fuzzy, bool marine_only) {
            this.getAphiaRecordsByNamesAsync(scientificnames, like, fuzzy, marine_only, null);
        }
        
        /// <remarks/>
        public void getAphiaRecordsByNamesAsync(string[] scientificnames, bool like, bool fuzzy, bool marine_only, object userState) {
            if ((this.getAphiaRecordsByNamesOperationCompleted == null)) {
                this.getAphiaRecordsByNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAphiaRecordsByNamesOperationCompleted);
            }
            this.InvokeAsync("getAphiaRecordsByNames", new object[] {
                        scientificnames,
                        like,
                        fuzzy,
                        marine_only}, this.getAphiaRecordsByNamesOperationCompleted, userState);
        }
        
        private void OngetAphiaRecordsByNamesOperationCompleted(object arg) {
            if ((this.getAphiaRecordsByNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAphiaRecordsByNamesCompleted(this, new getAphiaRecordsByNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getAphiaRecordsByVernacular", RequestNamespace="http://aphia/v1.0/AphiaRecords", ResponseNamespace="http://aphia/v1.0/AphiaRecords")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public AphiaRecord[] getAphiaRecordsByVernacular(string vernacular, bool like, int offset) {
            object[] results = this.Invoke("getAphiaRecordsByVernacular", new object[] {
                        vernacular,
                        like,
                        offset});
            return ((AphiaRecord[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetAphiaRecordsByVernacular(string vernacular, bool like, int offset, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getAphiaRecordsByVernacular", new object[] {
                        vernacular,
                        like,
                        offset}, callback, asyncState);
        }
        
        /// <remarks/>
        public AphiaRecord[] EndgetAphiaRecordsByVernacular(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((AphiaRecord[])(results[0]));
        }
        
        /// <remarks/>
        public void getAphiaRecordsByVernacularAsync(string vernacular, bool like, int offset) {
            this.getAphiaRecordsByVernacularAsync(vernacular, like, offset, null);
        }
        
        /// <remarks/>
        public void getAphiaRecordsByVernacularAsync(string vernacular, bool like, int offset, object userState) {
            if ((this.getAphiaRecordsByVernacularOperationCompleted == null)) {
                this.getAphiaRecordsByVernacularOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAphiaRecordsByVernacularOperationCompleted);
            }
            this.InvokeAsync("getAphiaRecordsByVernacular", new object[] {
                        vernacular,
                        like,
                        offset}, this.getAphiaRecordsByVernacularOperationCompleted, userState);
        }
        
        private void OngetAphiaRecordsByVernacularOperationCompleted(object arg) {
            if ((this.getAphiaRecordsByVernacularCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAphiaRecordsByVernacularCompleted(this, new getAphiaRecordsByVernacularCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getAphiaRecordsByDate", RequestNamespace="http://aphia/v1.0/AphiaRecords", ResponseNamespace="http://aphia/v1.0/AphiaRecords")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public AphiaRecord[] getAphiaRecordsByDate(string startdate, string enddate, bool marine_only, int offset) {
            object[] results = this.Invoke("getAphiaRecordsByDate", new object[] {
                        startdate,
                        enddate,
                        marine_only,
                        offset});
            return ((AphiaRecord[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetAphiaRecordsByDate(string startdate, string enddate, bool marine_only, int offset, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getAphiaRecordsByDate", new object[] {
                        startdate,
                        enddate,
                        marine_only,
                        offset}, callback, asyncState);
        }
        
        /// <remarks/>
        public AphiaRecord[] EndgetAphiaRecordsByDate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((AphiaRecord[])(results[0]));
        }
        
        /// <remarks/>
        public void getAphiaRecordsByDateAsync(string startdate, string enddate, bool marine_only, int offset) {
            this.getAphiaRecordsByDateAsync(startdate, enddate, marine_only, offset, null);
        }
        
        /// <remarks/>
        public void getAphiaRecordsByDateAsync(string startdate, string enddate, bool marine_only, int offset, object userState) {
            if ((this.getAphiaRecordsByDateOperationCompleted == null)) {
                this.getAphiaRecordsByDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAphiaRecordsByDateOperationCompleted);
            }
            this.InvokeAsync("getAphiaRecordsByDate", new object[] {
                        startdate,
                        enddate,
                        marine_only,
                        offset}, this.getAphiaRecordsByDateOperationCompleted, userState);
        }
        
        private void OngetAphiaRecordsByDateOperationCompleted(object arg) {
            if ((this.getAphiaRecordsByDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAphiaRecordsByDateCompleted(this, new getAphiaRecordsByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getAphiaClassificationByID", RequestNamespace="http://aphia/v1.0/Classification", ResponseNamespace="http://aphia/v1.0/Classification")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public Classification getAphiaClassificationByID(int AphiaID) {
            object[] results = this.Invoke("getAphiaClassificationByID", new object[] {
                        AphiaID});
            return ((Classification)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetAphiaClassificationByID(int AphiaID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getAphiaClassificationByID", new object[] {
                        AphiaID}, callback, asyncState);
        }
        
        /// <remarks/>
        public Classification EndgetAphiaClassificationByID(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Classification)(results[0]));
        }
        
        /// <remarks/>
        public void getAphiaClassificationByIDAsync(int AphiaID) {
            this.getAphiaClassificationByIDAsync(AphiaID, null);
        }
        
        /// <remarks/>
        public void getAphiaClassificationByIDAsync(int AphiaID, object userState) {
            if ((this.getAphiaClassificationByIDOperationCompleted == null)) {
                this.getAphiaClassificationByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAphiaClassificationByIDOperationCompleted);
            }
            this.InvokeAsync("getAphiaClassificationByID", new object[] {
                        AphiaID}, this.getAphiaClassificationByIDOperationCompleted, userState);
        }
        
        private void OngetAphiaClassificationByIDOperationCompleted(object arg) {
            if ((this.getAphiaClassificationByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAphiaClassificationByIDCompleted(this, new getAphiaClassificationByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getSourcesByAphiaID", RequestNamespace="http://aphia/v1.0/Sources", ResponseNamespace="http://aphia/v1.0/Sources")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public Source[] getSourcesByAphiaID(int AphiaID) {
            object[] results = this.Invoke("getSourcesByAphiaID", new object[] {
                        AphiaID});
            return ((Source[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetSourcesByAphiaID(int AphiaID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getSourcesByAphiaID", new object[] {
                        AphiaID}, callback, asyncState);
        }
        
        /// <remarks/>
        public Source[] EndgetSourcesByAphiaID(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Source[])(results[0]));
        }
        
        /// <remarks/>
        public void getSourcesByAphiaIDAsync(int AphiaID) {
            this.getSourcesByAphiaIDAsync(AphiaID, null);
        }
        
        /// <remarks/>
        public void getSourcesByAphiaIDAsync(int AphiaID, object userState) {
            if ((this.getSourcesByAphiaIDOperationCompleted == null)) {
                this.getSourcesByAphiaIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSourcesByAphiaIDOperationCompleted);
            }
            this.InvokeAsync("getSourcesByAphiaID", new object[] {
                        AphiaID}, this.getSourcesByAphiaIDOperationCompleted, userState);
        }
        
        private void OngetSourcesByAphiaIDOperationCompleted(object arg) {
            if ((this.getSourcesByAphiaIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSourcesByAphiaIDCompleted(this, new getSourcesByAphiaIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getAphiaSynonymsByID", RequestNamespace="http://aphia/v1.0/AphiaRecords", ResponseNamespace="http://aphia/v1.0/AphiaRecords")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public AphiaRecord[] getAphiaSynonymsByID(int AphiaID) {
            object[] results = this.Invoke("getAphiaSynonymsByID", new object[] {
                        AphiaID});
            return ((AphiaRecord[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetAphiaSynonymsByID(int AphiaID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getAphiaSynonymsByID", new object[] {
                        AphiaID}, callback, asyncState);
        }
        
        /// <remarks/>
        public AphiaRecord[] EndgetAphiaSynonymsByID(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((AphiaRecord[])(results[0]));
        }
        
        /// <remarks/>
        public void getAphiaSynonymsByIDAsync(int AphiaID) {
            this.getAphiaSynonymsByIDAsync(AphiaID, null);
        }
        
        /// <remarks/>
        public void getAphiaSynonymsByIDAsync(int AphiaID, object userState) {
            if ((this.getAphiaSynonymsByIDOperationCompleted == null)) {
                this.getAphiaSynonymsByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAphiaSynonymsByIDOperationCompleted);
            }
            this.InvokeAsync("getAphiaSynonymsByID", new object[] {
                        AphiaID}, this.getAphiaSynonymsByIDOperationCompleted, userState);
        }
        
        private void OngetAphiaSynonymsByIDOperationCompleted(object arg) {
            if ((this.getAphiaSynonymsByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAphiaSynonymsByIDCompleted(this, new getAphiaSynonymsByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getAphiaVernacularsByID", RequestNamespace="http://aphia/v1.0/AphiaVernaculars", ResponseNamespace="http://aphia/v1.0/AphiaVernaculars")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public Vernacular[] getAphiaVernacularsByID(int AphiaID) {
            object[] results = this.Invoke("getAphiaVernacularsByID", new object[] {
                        AphiaID});
            return ((Vernacular[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetAphiaVernacularsByID(int AphiaID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getAphiaVernacularsByID", new object[] {
                        AphiaID}, callback, asyncState);
        }
        
        /// <remarks/>
        public Vernacular[] EndgetAphiaVernacularsByID(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Vernacular[])(results[0]));
        }
        
        /// <remarks/>
        public void getAphiaVernacularsByIDAsync(int AphiaID) {
            this.getAphiaVernacularsByIDAsync(AphiaID, null);
        }
        
        /// <remarks/>
        public void getAphiaVernacularsByIDAsync(int AphiaID, object userState) {
            if ((this.getAphiaVernacularsByIDOperationCompleted == null)) {
                this.getAphiaVernacularsByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAphiaVernacularsByIDOperationCompleted);
            }
            this.InvokeAsync("getAphiaVernacularsByID", new object[] {
                        AphiaID}, this.getAphiaVernacularsByIDOperationCompleted, userState);
        }
        
        private void OngetAphiaVernacularsByIDOperationCompleted(object arg) {
            if ((this.getAphiaVernacularsByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAphiaVernacularsByIDCompleted(this, new getAphiaVernacularsByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getAphiaChildrenByID", RequestNamespace="http://aphia/v1.0/AphiaRecords", ResponseNamespace="http://aphia/v1.0/AphiaRecords")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public AphiaRecord[] getAphiaChildrenByID(int AphiaID, int offset, bool marine_only) {
            object[] results = this.Invoke("getAphiaChildrenByID", new object[] {
                        AphiaID,
                        offset,
                        marine_only});
            return ((AphiaRecord[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetAphiaChildrenByID(int AphiaID, int offset, bool marine_only, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getAphiaChildrenByID", new object[] {
                        AphiaID,
                        offset,
                        marine_only}, callback, asyncState);
        }
        
        /// <remarks/>
        public AphiaRecord[] EndgetAphiaChildrenByID(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((AphiaRecord[])(results[0]));
        }
        
        /// <remarks/>
        public void getAphiaChildrenByIDAsync(int AphiaID, int offset, bool marine_only) {
            this.getAphiaChildrenByIDAsync(AphiaID, offset, marine_only, null);
        }
        
        /// <remarks/>
        public void getAphiaChildrenByIDAsync(int AphiaID, int offset, bool marine_only, object userState) {
            if ((this.getAphiaChildrenByIDOperationCompleted == null)) {
                this.getAphiaChildrenByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAphiaChildrenByIDOperationCompleted);
            }
            this.InvokeAsync("getAphiaChildrenByID", new object[] {
                        AphiaID,
                        offset,
                        marine_only}, this.getAphiaChildrenByIDOperationCompleted, userState);
        }
        
        private void OngetAphiaChildrenByIDOperationCompleted(object arg) {
            if ((this.getAphiaChildrenByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAphiaChildrenByIDCompleted(this, new getAphiaChildrenByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("matchAphiaRecordsByNames", RequestNamespace="http://aphia/v1.0/AphiaMatches", ResponseNamespace="http://aphia/v1.0/AphiaMatches")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public AphiaRecord[][] matchAphiaRecordsByNames(string[] scientificnames, bool marine_only) {
            object[] results = this.Invoke("matchAphiaRecordsByNames", new object[] {
                        scientificnames,
                        marine_only});
            return ((AphiaRecord[][])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginmatchAphiaRecordsByNames(string[] scientificnames, bool marine_only, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("matchAphiaRecordsByNames", new object[] {
                        scientificnames,
                        marine_only}, callback, asyncState);
        }
        
        /// <remarks/>
        public AphiaRecord[][] EndmatchAphiaRecordsByNames(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((AphiaRecord[][])(results[0]));
        }
        
        /// <remarks/>
        public void matchAphiaRecordsByNamesAsync(string[] scientificnames, bool marine_only) {
            this.matchAphiaRecordsByNamesAsync(scientificnames, marine_only, null);
        }
        
        /// <remarks/>
        public void matchAphiaRecordsByNamesAsync(string[] scientificnames, bool marine_only, object userState) {
            if ((this.matchAphiaRecordsByNamesOperationCompleted == null)) {
                this.matchAphiaRecordsByNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmatchAphiaRecordsByNamesOperationCompleted);
            }
            this.InvokeAsync("matchAphiaRecordsByNames", new object[] {
                        scientificnames,
                        marine_only}, this.matchAphiaRecordsByNamesOperationCompleted, userState);
        }
        
        private void OnmatchAphiaRecordsByNamesOperationCompleted(object arg) {
            if ((this.matchAphiaRecordsByNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.matchAphiaRecordsByNamesCompleted(this, new matchAphiaRecordsByNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://aphia/v1.0")]
    public partial class AphiaRecord {
        
        private int aphiaIDField;
        
        private string urlField;
        
        private string scientificnameField;
        
        private string authorityField;
        
        private string rankField;
        
        private string statusField;
        
        private string unacceptreasonField;
        
        private int valid_AphiaIDField;
        
        private string valid_nameField;
        
        private string valid_authorityField;
        
        private string kingdomField;
        
        private string phylumField;
        
        private string classField;
        
        private string orderField;
        
        private string familyField;
        
        private string genusField;
        
        private string citationField;
        
        private string lsidField;
        
        private int isMarineField;
        
        private int isBrackishField;
        
        private int isFreshwaterField;
        
        private int isTerrestrialField;
        
        private int isExtinctField;
        
        private string match_typeField;
        
        private string modifiedField;
        
        /// <remarks/>
        public int AphiaID {
            get {
                return this.aphiaIDField;
            }
            set {
                this.aphiaIDField = value;
            }
        }
        
        /// <remarks/>
        public string url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
        
        /// <remarks/>
        public string scientificname {
            get {
                return this.scientificnameField;
            }
            set {
                this.scientificnameField = value;
            }
        }
        
        /// <remarks/>
        public string authority {
            get {
                return this.authorityField;
            }
            set {
                this.authorityField = value;
            }
        }
        
        /// <remarks/>
        public string rank {
            get {
                return this.rankField;
            }
            set {
                this.rankField = value;
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string unacceptreason {
            get {
                return this.unacceptreasonField;
            }
            set {
                this.unacceptreasonField = value;
            }
        }
        
        /// <remarks/>
        public int valid_AphiaID {
            get {
                return this.valid_AphiaIDField;
            }
            set {
                this.valid_AphiaIDField = value;
            }
        }
        
        /// <remarks/>
        public string valid_name {
            get {
                return this.valid_nameField;
            }
            set {
                this.valid_nameField = value;
            }
        }
        
        /// <remarks/>
        public string valid_authority {
            get {
                return this.valid_authorityField;
            }
            set {
                this.valid_authorityField = value;
            }
        }
        
        /// <remarks/>
        public string kingdom {
            get {
                return this.kingdomField;
            }
            set {
                this.kingdomField = value;
            }
        }
        
        /// <remarks/>
        public string phylum {
            get {
                return this.phylumField;
            }
            set {
                this.phylumField = value;
            }
        }
        
        /// <remarks/>
        public string @class {
            get {
                return this.classField;
            }
            set {
                this.classField = value;
            }
        }
        
        /// <remarks/>
        public string order {
            get {
                return this.orderField;
            }
            set {
                this.orderField = value;
            }
        }
        
        /// <remarks/>
        public string family {
            get {
                return this.familyField;
            }
            set {
                this.familyField = value;
            }
        }
        
        /// <remarks/>
        public string genus {
            get {
                return this.genusField;
            }
            set {
                this.genusField = value;
            }
        }
        
        /// <remarks/>
        public string citation {
            get {
                return this.citationField;
            }
            set {
                this.citationField = value;
            }
        }
        
        /// <remarks/>
        public string lsid {
            get {
                return this.lsidField;
            }
            set {
                this.lsidField = value;
            }
        }
        
        /// <remarks/>
        public int isMarine {
            get {
                return this.isMarineField;
            }
            set {
                this.isMarineField = value;
            }
        }
        
        /// <remarks/>
        public int isBrackish {
            get {
                return this.isBrackishField;
            }
            set {
                this.isBrackishField = value;
            }
        }
        
        /// <remarks/>
        public int isFreshwater {
            get {
                return this.isFreshwaterField;
            }
            set {
                this.isFreshwaterField = value;
            }
        }
        
        /// <remarks/>
        public int isTerrestrial {
            get {
                return this.isTerrestrialField;
            }
            set {
                this.isTerrestrialField = value;
            }
        }
        
        /// <remarks/>
        public int isExtinct {
            get {
                return this.isExtinctField;
            }
            set {
                this.isExtinctField = value;
            }
        }
        
        /// <remarks/>
        public string match_type {
            get {
                return this.match_typeField;
            }
            set {
                this.match_typeField = value;
            }
        }
        
        /// <remarks/>
        public string modified {
            get {
                return this.modifiedField;
            }
            set {
                this.modifiedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://aphia/v1.0")]
    public partial class Vernacular {
        
        private string vernacularField;
        
        private string language_codeField;
        
        private string languageField;
        
        /// <remarks/>
        public string vernacular {
            get {
                return this.vernacularField;
            }
            set {
                this.vernacularField = value;
            }
        }
        
        /// <remarks/>
        public string language_code {
            get {
                return this.language_codeField;
            }
            set {
                this.language_codeField = value;
            }
        }
        
        /// <remarks/>
        public string language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://aphia/v1.0")]
    public partial class Source {
        
        private int source_idField;
        
        private string useField;
        
        private string referenceField;
        
        private string pageField;
        
        private string urlField;
        
        private string linkField;
        
        private string fulltextField;
        
        /// <remarks/>
        public int source_id {
            get {
                return this.source_idField;
            }
            set {
                this.source_idField = value;
            }
        }
        
        /// <remarks/>
        public string use {
            get {
                return this.useField;
            }
            set {
                this.useField = value;
            }
        }
        
        /// <remarks/>
        public string reference {
            get {
                return this.referenceField;
            }
            set {
                this.referenceField = value;
            }
        }
        
        /// <remarks/>
        public string page {
            get {
                return this.pageField;
            }
            set {
                this.pageField = value;
            }
        }
        
        /// <remarks/>
        public string url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
        
        /// <remarks/>
        public string link {
            get {
                return this.linkField;
            }
            set {
                this.linkField = value;
            }
        }
        
        /// <remarks/>
        public string fulltext {
            get {
                return this.fulltextField;
            }
            set {
                this.fulltextField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://aphia/v1.0")]
    public partial class Classification {
        
        private int aphiaIDField;
        
        private string rankField;
        
        private string scientificnameField;
        
        private Classification childField;
        
        /// <remarks/>
        public int AphiaID {
            get {
                return this.aphiaIDField;
            }
            set {
                this.aphiaIDField = value;
            }
        }
        
        /// <remarks/>
        public string rank {
            get {
                return this.rankField;
            }
            set {
                this.rankField = value;
            }
        }
        
        /// <remarks/>
        public string scientificname {
            get {
                return this.scientificnameField;
            }
            set {
                this.scientificnameField = value;
            }
        }
        
        /// <remarks/>
        public Classification child {
            get {
                return this.childField;
            }
            set {
                this.childField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getAphiaIDCompletedEventHandler(object sender, getAphiaIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAphiaIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAphiaIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getAphiaRecordsCompletedEventHandler(object sender, getAphiaRecordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAphiaRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAphiaRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AphiaRecord[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AphiaRecord[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getAphiaNameByIDCompletedEventHandler(object sender, getAphiaNameByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAphiaNameByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAphiaNameByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getAphiaRecordByIDCompletedEventHandler(object sender, getAphiaRecordByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAphiaRecordByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAphiaRecordByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AphiaRecord Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AphiaRecord)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getAphiaRecordByExtIDCompletedEventHandler(object sender, getAphiaRecordByExtIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAphiaRecordByExtIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAphiaRecordByExtIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AphiaRecord Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AphiaRecord)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getExtIDbyAphiaIDCompletedEventHandler(object sender, getExtIDbyAphiaIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getExtIDbyAphiaIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getExtIDbyAphiaIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getAphiaRecordsByNamesCompletedEventHandler(object sender, getAphiaRecordsByNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAphiaRecordsByNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAphiaRecordsByNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AphiaRecord[][] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AphiaRecord[][])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getAphiaRecordsByVernacularCompletedEventHandler(object sender, getAphiaRecordsByVernacularCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAphiaRecordsByVernacularCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAphiaRecordsByVernacularCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AphiaRecord[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AphiaRecord[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getAphiaRecordsByDateCompletedEventHandler(object sender, getAphiaRecordsByDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAphiaRecordsByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAphiaRecordsByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AphiaRecord[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AphiaRecord[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getAphiaClassificationByIDCompletedEventHandler(object sender, getAphiaClassificationByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAphiaClassificationByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAphiaClassificationByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Classification Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Classification)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getSourcesByAphiaIDCompletedEventHandler(object sender, getSourcesByAphiaIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSourcesByAphiaIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSourcesByAphiaIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Source[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Source[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getAphiaSynonymsByIDCompletedEventHandler(object sender, getAphiaSynonymsByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAphiaSynonymsByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAphiaSynonymsByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AphiaRecord[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AphiaRecord[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getAphiaVernacularsByIDCompletedEventHandler(object sender, getAphiaVernacularsByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAphiaVernacularsByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAphiaVernacularsByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Vernacular[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Vernacular[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getAphiaChildrenByIDCompletedEventHandler(object sender, getAphiaChildrenByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAphiaChildrenByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAphiaChildrenByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AphiaRecord[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AphiaRecord[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void matchAphiaRecordsByNamesCompletedEventHandler(object sender, matchAphiaRecordsByNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class matchAphiaRecordsByNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal matchAphiaRecordsByNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AphiaRecord[][] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AphiaRecord[][])(this.results[0]));
            }
        }
    }
}
