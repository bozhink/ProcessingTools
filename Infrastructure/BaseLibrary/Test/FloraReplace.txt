        ////// Flora-like tagging methods
        ////public void PerformFloraReplace(string xmlTemplate)
        ////{
        ////    XmlDocument template = new XmlDocument();
        ////    template.LoadXml(xmlTemplate);

        ////    XmlNode root = template.DocumentElement;
        ////    Alert.Log(root.ChildNodes.Count);

        ////    for (int i = root.ChildNodes.Count - 1; i >= 0; i--)
        ////    {
        ////        XmlNode taxon = root.ChildNodes.Item(i);
        ////        XmlNode find = taxon.FirstChild;
        ////        XmlNode replace = taxon.LastChild;

        ////        Alert.Log(find.InnerXml);

        ////        string pattern = find.InnerXml;
        ////        pattern = Regex.Replace(pattern, @"\.", "\\.");
        ////        pattern = Regex.Replace(pattern, @"(?<=\w)\s+(?=\w)", @"\b\s*\b");
        ////        pattern = Regex.Replace(pattern, @"(?<=\W)\s+(?=\w)", @"?\s*\b");
        ////        pattern = Regex.Replace(pattern, @"(?<=\W)\s+", @"?\s*");
        ////        pattern = Regex.Replace(pattern, @"\bvar\b", "(var|v)");

        ////        pattern = "(?i)" + pattern;

        ////        this.Xml = Regex.Replace(
        ////            this.Xml,
        ////            "(?<![a-z-])(?<!<[^>]+=\"[^>]*)(?<!<tn>)(" + pattern + ")(?![A-Za-z])(?!</tn\\W)(?!</tp:)(?!</name>)",
        ////            "<tn>$1</tn>");
        ////    }

        ////    ////string infraspecificPattern = "\\b([Vv]ar\\.|[Ss]ubsp\\.|([Ss]ub)?[Ss]ect\\.|[Aa]ff\\.|[Cc]f\\.|[Ff]orma)";
        ////    ////string lowerPattern = "\\s*\\b[a-z]*(ensis|ulei|onis|oidis|oide?a|phyll[au][sm]?|[aeiou]lii|longiflora)\\b";

        ////    ////xml = Regex.Replace(xml, infraspecificPattern + "\\s*<tn>", "<tn>$1 ");
        ////    ////xml = Regex.Replace(xml, "(?<!<tn>)(" + infraspecificPattern + "\\s+[A-Z]?[a-z\\.-]+)(?!</tn>)", "<tn>$1</tn>");

        ////    ////xml = Regex.Replace(xml, @"<tn>([A-Z][a-z\.-]+)</tn>\s+<tn>([a-z\.-]+)</tn>", "<tn>$1 $2</tn>");
        ////    ////xml = Regex.Replace(xml, "(<tn>)" + infraspecificPattern + "</tn>\\s+<tn>", "$1$2 ");

        ////    ////xml = Regex.Replace(xml, "</tn>\\s*<tn>" + infraspecificPattern, " $1");

        ////    ////// TODO: Here we must remove tn/tn
        ////    ////{
        ////    ////    ParseXmlStringToXmlDocument();
        ////    ////    XmlNodeList nodeList = xmlDocument.SelectNodes("//tn[name(..)!='tn'][count(.//tn)!=0]");
        ////    ////    foreach (XmlNode node in nodeList)
        ////    ////    {
        ////    ////        node.InnerXml = Regex.Replace(node.InnerXml, "</?tn>", "");
        ////    ////    }
        ////    ////    xml = xmlDocument.OuterXml;
        ////    ////}

        ////    ////// Guess new taxa:
        ////    ////for (int i = 0; i < 10; i++)
        ////    ////{
        ////    ////    xml = Regex.Replace(xml,
        ////    ////        "(</tn>,?(\\s+and)?\\s+)(" + infraspecificPattern + "?" + lowerPattern + ")",
        ////    ////        "$1<tn>$3</tn>");
        ////    ////}

        ////    //// Genus <tn>species</tn>. The result will be <tn>Genus <tn>species</tn></tn>
        ////    ////xml = Regex.Replace(xml, @"([^\.\s]\s+)([A-Z][a-z\.-]+\s+<tn>[a-z\.-]+.*?</tn>)", "$1<tn>$2</tn>");

        ////    ////xml = Regex.Replace(xml, "\\b([A-Z][a-z\\.-]+(\\s*[a-z\\.-]+)?\\s+<tn>" + infraspecificPattern + "\\s*[a-z\\.-]+.*?</tn>)", "<tn>$1</tn>");

        ////    ////xml = Regex.Replace(xml,
        ////    ////    "(([A-Z][a-z\\.-]+|<tn>.*?</tn>)\\s+([a-z\\.-]*\\s*" + infraspecificPattern + ")?" + lowerPattern + ")",
        ////    ////    "<tn>$1</tn>");

        ////    ////// TODO: Here we must remove tn/tn
        ////    ////{
        ////    ////    ParseXmlStringToXmlDocument();
        ////    ////    XmlNodeList nodeList = xmlDocument.SelectNodes("//tn[name(..)!='tn'][count(.//tn)!=0]");
        ////    ////    foreach (XmlNode node in nodeList)
        ////    ////    {
        ////    ////        node.InnerXml = Regex.Replace(node.InnerXml, "</?tn>", "");
        ////    ////    }
        ////    ////    xml = xmlDocument.OuterXml;
        ////    ////}

        ////    ////// Remove taxa in toTaxon
        ////    ////{
        ////    ////    ParseXmlStringToXmlDocument();
        ////    ////    XmlNodeList nodeList = xmlDocument.SelectNodes("//toTaxon[count(.//tn)!=0]");
        ////    ////    foreach (XmlNode node in nodeList)
        ////    ////    {
        ////    ////        node.InnerXml = Regex.Replace(node.InnerXml, "</?tn>", "");
        ////    ////    }
        ////    ////    xml = xmlDocument.OuterXml;
        ////    ////}
        ////}