@model ProcessingTools.Web.Models.Documents.Articles.ArticleDeleteViewModel
@{
    ViewData[ContextKeys.Title] = "Delete Article";
    if (string.IsNullOrWhiteSpace(Model?.PageHeading))
    {
        string title = Html.DisplayNameFor(m => m.PageHeading);
        if (!string.IsNullOrWhiteSpace(title))
        {
            ViewData[ContextKeys.Title] = title;
        }
    }
    else
    {
        ViewData[ContextKeys.Title] = Model.PageHeading;
    }
}

<section role="main">
    <header>
        <h2>@ViewData[ContextKeys.Title]</h2>
    </header>
    <div asp-validation-summary="All" class="text-danger"></div>
    @if (Model == null)
    {
        <div class="alert alert-danger">Invalid view model.</div>
    }
    else
    {
        <dl class="row">
            <dt class="col-md-2 bold">@Html.DisplayNameFor(m => m.Title)</dt>
            <dd class="col-md-10">@Html.DisplayFor(m => m.Title)</dd>

            @if (!string.IsNullOrWhiteSpace(Model.SubTitle))
            {
            <dt class="col-md-2 bold">@Html.DisplayNameFor(m => m.SubTitle)</dt>
            <dd class="col-md-10">@Html.DisplayFor(m => m.SubTitle)</dd>
            }

            <dt class="col-md-2 bold">@Html.DisplayNameFor(m => m.Doi)</dt>
            <dd class="col-md-10">@Html.DisplayFor(m => m.Doi)</dd>

            @if (!string.IsNullOrWhiteSpace(Model.Journal?.Name))
            {
            <dt class="col-md-2 bold">@Html.DisplayNameFor(m => m.Journal.Name)</dt>
            <dd class="col-md-10">@Html.DisplayFor(m => m.Journal.Name)</dd>
            }

            <dt class="col-md-2 bold">@Html.DisplayNameFor(m => m.PublishedOn)</dt>
            <dd class="col-md-10">@Html.DisplayFor(m => m.PublishedOn)</dd>

            <dt class="col-md-2 bold">@Html.DisplayNameFor(m => m.AcceptedOn)</dt>
            <dd class="col-md-10">@Html.DisplayFor(m => m.AcceptedOn)</dd>

            <dt class="col-md-2 bold">@Html.DisplayNameFor(m => m.ReceivedOn)</dt>
            <dd class="col-md-10">@Html.DisplayFor(m => m.ReceivedOn)</dd>

            @if (!string.IsNullOrWhiteSpace(Model.VolumeSeries))
            {
            <dt class="col-md-2 bold">@Html.DisplayNameFor(m => m.VolumeSeries)</dt>
            <dd class="col-md-10">@Html.DisplayFor(m => m.VolumeSeries)</dd>
            }

            @if (!string.IsNullOrWhiteSpace(Model.Volume))
            {
            <dt class="col-md-2 bold">@Html.DisplayNameFor(m => m.Volume)</dt>
            <dd class="col-md-10">@Html.DisplayFor(m => m.Volume)</dd>
            }

            @if (!string.IsNullOrWhiteSpace(Model.Issue))
            {
            <dt class="col-md-2 bold">@Html.DisplayNameFor(m => m.Issue)</dt>
            <dd class="col-md-10">@Html.DisplayFor(m => m.Issue)</dd>
            }

            @if (!string.IsNullOrWhiteSpace(Model.IssuePart))
            {
            <dt class="col-md-2 bold">@Html.DisplayNameFor(m => m.IssuePart)</dt>
            <dd class="col-md-10">@Html.DisplayFor(m => m.IssuePart)</dd>
            }

            @if (!string.IsNullOrWhiteSpace(Model.ELocationId))
            {
            <dt class="col-md-2 bold">@Html.DisplayNameFor(m => m.ELocationId)</dt>
            <dd class="col-md-10">@Html.DisplayFor(m => m.ELocationId)</dd>
            }

            @if (!string.IsNullOrWhiteSpace(Model.FirstPage))
            {
            <dt class="col-md-2 bold">@Html.DisplayNameFor(m => m.FirstPage)</dt>
            <dd class="col-md-10">@Html.DisplayFor(m => m.FirstPage)</dd>
            }

            @if (!string.IsNullOrWhiteSpace(Model.LastPage))
            {
            <dt class="col-md-2 bold">@Html.DisplayNameFor(m => m.LastPage)</dt>
            <dd class="col-md-10">@Html.DisplayFor(m => m.LastPage)</dd>
            }

            @if (Model.NumberOfPages > 0)
            {
            <dt class="col-md-2 bold">@Html.DisplayNameFor(m => m.NumberOfPages)</dt>
            <dd class="col-md-10">@Html.DisplayFor(m => m.NumberOfPages)</dd>
            }

            <dt class="col-md-2 bold">@Html.DisplayNameFor(m => m.IsFinalized)</dt>
            <dd class="col-md-10">@Html.DisplayFor(m => m.IsFinalized)</dd>

            <dt class="col-md-2 bold">@Html.DisplayNameFor(m => m.IsDeployed)</dt>
            <dd class="col-md-10">@Html.DisplayFor(m => m.IsDeployed)</dd>

            <dt class="col-md-2 bold">@Html.DisplayNameFor(m => m.CreatedBy)</dt>
            <dd class="col-md-10">@Html.DisplayFor(m => m.CreatedBy)</dd>

            <dt class="col-md-2 bold">@Html.DisplayNameFor(m => m.CreatedOn)</dt>
            <dd class="col-md-10">@Html.DisplayFor(m => m.CreatedOn)</dd>

            <dt class="col-md-2 bold">@Html.DisplayNameFor(m => m.ModifiedBy)</dt>
            <dd class="col-md-10">@Html.DisplayFor(m => m.ModifiedBy)</dd>

            <dt class="col-md-2 bold">@Html.DisplayNameFor(m => m.ModifiedOn)</dt>
            <dd class="col-md-10">@Html.DisplayFor(m => m.ModifiedOn)</dd>
        </dl>

        <form asp-route-returnUrl="@Model.ReturnUrl" method="post">
            <input type="hidden" asp-for="Id" />
            <div class="form-group row">
                <div class="col-md-12">
                    <input type="submit" class="btn btn-danger" value="Delete" />
                    <a asp-action="@(ArticlesController.IndexActionName)" asp-route-returnUrl="@Model.ReturnUrl" class="btn btn-outline-secondary">Cancel</a>
                </div>
            </div>
        </form>
    }
    <footer class="page-navigation">
        <p><a asp-action="@(ArticlesController.IndexActionName)">Back to List</a></p>
    </footer>
</section>
