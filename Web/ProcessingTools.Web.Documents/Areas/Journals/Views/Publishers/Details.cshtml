@model ProcessingTools.Web.Documents.Areas.Journals.ViewModels.Publishers.PublisherDetailsViewModel

@{
    ViewBag.Title = ContentConstants.DeafultDetailsPageTitle;
}

<h2>
    @ContentConstants.DeafultDetailsPageHeading
</h2>

<div>
    <h4>Publisher</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.AbbreviatedName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AbbreviatedName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CreatedBy)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CreatedBy)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ModifiedBy)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ModifiedBy)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DateCreated)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DateCreated)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DateModified)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DateModified)
        </dd>

        @if (Model.Addresses?.Count > 0)
        {
            <dd>
                @Html.DisplayNameFor(model => model.Addresses)
            </dd>

            foreach (var address in Model.Addresses.OrderBy(a => a.AddressString))
            {
                <dt>
                    @*TODO*@
                    @*@Html.ActionLink(address.AddressString, "Details", "Addresses", new { id = address.Id })*@
                    @address.AddressString
                </dt>
            }
        }

        @if (Model.Journals?.Count > 0)
        {
            <dd>
                @Html.DisplayNameFor(model => model.Journals)
            </dd>

            foreach (var journal in Model.Journals.OrderBy(j => j.Name))
            {
                <dt>
                    @Html.ActionLink(linkText: journal.Name, actionName: nameof(JournalsController.Details), controllerName: JournalsController.ControllerName, routeValues: new { area = AreasConstants.JournalsAreaName, id = journal.Id }, htmlAttributes: null)
                </dt>
            }
        }

    </dl>
</div>
<p>
    @Html.ActionLink(ContentConstants.DefaultEditActionLinkTitle, nameof(PublishersController.Edit), new { id = Model.Id })
    <span class="@ContentConstants.DefaultSeparatorClassName"></span>
    @Html.ActionLink(ContentConstants.DefaultBackToListActionLinkTitle, nameof(PublishersController.Index))
</p>
