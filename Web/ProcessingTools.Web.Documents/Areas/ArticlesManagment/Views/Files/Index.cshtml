@using ProcessingTools.Web.Common.Constants
@using ProcessingTools.Web.Documents.Areas.ArticlesManagment.Controllers
@using ProcessingTools.Web.Documents.Areas.ArticlesManagment.ViewModels.Files

@model IEnumerable<DocumentViewModel>

@{
    ViewBag.Title = "List of Files";
}

<main>
    <h2>List of Files</h2>

    <p>
        @Html.ActionLink(ContentConstants.DefaultUploadNewFileActionLinkTitle, nameof(FilesController.Create))
    </p>
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.FileName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DateCreated)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DateModified)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.FileName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DateCreated)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DateModified)
                    </td>
                    <td>
                        @Html.ActionLink(ContentConstants.DefaultPreviewActionLinkTitle, nameof(FilesController.Preview), new { id = item.Id })
                        <span class="@ContentConstants.DefaultSeparatorClassName"></span>
                        @Html.ActionLink(ContentConstants.DefaultEditActionLinkTitle, nameof(FilesController.Edit), new { id = item.Id })
                        <span class="@ContentConstants.DefaultSeparatorClassName"></span>
                        @Html.ActionLink(ContentConstants.DefaultDetailsActionLinkTitle, nameof(FilesController.Details), new { id = item.Id })
                        <span class="@ContentConstants.DefaultSeparatorClassName"></span>
                        @Html.ActionLink(ContentConstants.DefaultDeleteActionLinkTitle, nameof(FilesController.Delete), new { id = item.Id })
                        <span class="@ContentConstants.DefaultSeparatorClassName"></span>
                        @Html.ActionLink(ContentConstants.DefaultDownloadActionLinkTitle, nameof(FilesController.Download), new { id = item.Id })
                    </td>
                </tr>
            }
        </tbody>
    </table>
</main>

@{
    long pageNumber = ViewBag.PageNumber;
    long itemsPerPage = ViewBag.NumberOfItemsPerPage;
    long lastPage = ViewBag.NumberOfPages - 1;
    string pageActionName = nameof(FilesController.Index);

    if (lastPage > 0)
    {
        <nav>
            <ul class="pagination">
                <li>
                    @Html.ActionLink(" ", pageActionName, new { p = 0, n = itemsPerPage }, new { @class = "glyphicon glyphicon-fast-backward" })
                </li>

                <li>
                    @Html.ActionLink(" ", pageActionName, new { p = (pageNumber == 0 ? pageNumber : pageNumber - 1), n = itemsPerPage }, new { @class = "glyphicon glyphicon-backward" })
                </li>

                @for (long i = 0; i < ViewBag.NumberOfPages; ++i)
                {
                    <li class="@((i == pageNumber) ? "active" : null)">
                        @Html.ActionLink((i + 1).ToString(), pageActionName, new { p = i, n = itemsPerPage })
                    </li>
                }

                <li>
                    @Html.ActionLink(" ", pageActionName, new { p = (pageNumber == lastPage ? pageNumber : pageNumber + 1), n = itemsPerPage }, new { @class = "glyphicon glyphicon-forward" })
                </li>

                <li>
                    @Html.ActionLink(" ", pageActionName, new { p = lastPage, n = itemsPerPage }, new { @class = "glyphicon glyphicon-fast-forward" })
                </li>
            </ul>
        </nav>
    }
}