@model ProcessingTools.Web.Documents.Areas.Articles.ViewModels.Files.DocumentDetailsViewModel

@{
    ViewBag.Title = ContentConstants.DeafultEditPageTitle;
}

<h2>
    @ContentConstants.DeafultEditPageHeading
</h2>

<br />

<button onclick="save()" class="btn btn-default">Save</button>

<br />

<style>
    #editor-container {
        margin: 0 auto;
        width: 100%;
        height: 500px;
        border: 1px solid gray;
    }
</style>

<div id="editor-container"></div>

<script src="~/bower_components/jquery/dist/jquery.js"></script>

<link href="~/bower_components/toastr/toastr.min.css" rel="stylesheet" />
<script src="~/bower_components/toastr/toastr.js"></script>
<script src="~/Scripts/custom/toastrConfig.js"></script>

<script src="~/Scripts/custom/jsonRequester.js"></script>


<script src="~/node_modules/monaco-editor/min/vs/loader.js"></script>
<script>
    require.config({
        paths: {
            'vs': '../../../node_modules/monaco-editor/min/vs'
        }
    });

    require(['vs/editor/editor.main'], function () {
        window.editor = monaco.editor.create(document.getElementById('editor-container'), {
            value: @Html.Raw(Json.Encode(Model.Content)),
            language: 'xml',
            // theme: 'vs-dark'
        });
    });
</script>

<script>
    const AUTOSAVE_TIME_MILLISECONDS = 600000,
        MINIMAL_TIME_SPAN_BETWEEN_SEQUENTAL_SAVES_MILLISECONDS = 5000;

    window.lastSaveTime = window.lastSaveTime || new Date();

    function save() {
        var content = window.editor.getValue();

        jsonRequester.put('/Articles/Files/Save/@Model.Id', {
            data: {
                content: content
            }
        })
        .then(function(res) {
            if (res.Status === 'OK') {
                toastr.success(JSON.stringify(res));
            } else {
                toastr.error(JSON.stringify(res));
            }
        })
        .catch(function(err) {
            toastr.error(JSON.stringify(res));
        });
    }

    // Autosave
    setInterval(save, AUTOSAVE_TIME_MILLISECONDS);

    // Ctrl + s
    document.addEventListener("keydown", function(event) {
        var e = event || window.event,
            now = new Date();
        if (e.ctrlKey && e.which == 83) {
            e.preventDefault();
            if ((now - window.lastSaveTime) > MINIMAL_TIME_SPAN_BETWEEN_SEQUENTAL_SAVES_MILLISECONDS) {
                save();
                window.lastSaveTime = new Date();
                return false;
            } else {
                toastr.info('Wait ' + ((now - window.lastSaveTime) / 1000.0) + 's before save.');
            }
        }
    });
</script>
